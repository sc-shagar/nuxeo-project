<?xml version="1.0"?>
<component name="default-repository-config">
  <extension target="org.nuxeo.ecm.core.blob.BlobManager" point="configuration">
    <blobprovider name="default">
      <class>org.nuxeo.ecm.core.blob.binary.DefaultBinaryManager</class>
      <property name="path">/home/opc/nuxeo-server-tomcat-2021.1-Dev/nxserver/data/binaries</property>
      <property name="key"></property>
    </blobprovider>
  </extension>



  <require>org.nuxeo.runtime.mongodb.MongoDBComponent</require>

  <extension target="org.nuxeo.ecm.core.storage.mongodb.MongoDBRepositoryService"
      point="repository">
    <!-- it will lookup for "repository/default" connection -->
    <repository name="default" label="label.default.repository">
      <pool minPoolSize="0" maxPoolSize="20"
        blockingTimeoutMillis="100" />
      <fulltext disabled="false"
                storedInBlob="false"
                searchDisabled="false" />
      <cache enabled="FreeMarker template error (DEBUG mode; use RETHROW in production!):
The following has evaluated to null or missing:
==> nuxeo.dbs  [in template "default-repository-config.xml.nxftl" at line 148, column 25]

----
Tip: It's the step after the last dot that caused this error, not those before it.
----
Tip: If the failing expression is known to legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${nuxeo.dbs.cache.enabled} auto-escaped  [in template "default-repository-config.xml.nxftl" at line 148, column 23]
----

Java stack trace (for programmers):
----
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:134)
	at freemarker.core.UnexpectedTypeException.newDescriptionBuilder(UnexpectedTypeException.java:85)
	at freemarker.core.UnexpectedTypeException.<init>(UnexpectedTypeException.java:48)
	at freemarker.core.NonHashException.<init>(NonHashException.java:49)
	at freemarker.core.Dot._eval(Dot.java:48)
	at freemarker.core.Expression.eval(Expression.java:101)
	at freemarker.core.Dot._eval(Dot.java:41)
	at freemarker.core.Expression.eval(Expression.java:101)
	at freemarker.core.BuiltInForLegacyEscaping._eval(BuiltInForLegacyEscaping.java:33)
	at freemarker.core.Expression.eval(Expression.java:101)
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:63)
	at freemarker.core.Environment.visit(Environment.java:334)
	at freemarker.core.Environment.visit(Environment.java:340)
	at freemarker.core.Environment.visit(Environment.java:340)
	at freemarker.core.Environment.process(Environment.java:313)
	at freemarker.template.Template.process(Template.java:383)
	at org.nuxeo.common.utils.TextTemplate.processFreemarker(TextTemplate.java:369)
	at org.nuxeo.common.utils.TextTemplate.processDirectory(TextTemplate.java:462)
	at org.nuxeo.common.utils.TextTemplate.processDirectory(TextTemplate.java:487)
	at org.nuxeo.common.utils.TextTemplate.processDirectory(TextTemplate.java:487)
	at org.nuxeo.launcher.config.ServerConfigurator.parseAndCopy(ServerConfigurator.java:182)
	at org.nuxeo.launcher.config.ConfigurationGenerator.generateFiles(ConfigurationGenerator.java:813)
	at org.nuxeo.launcher.config.ConfigurationGenerator.run(ConfigurationGenerator.java:494)
	at org.nuxeo.launcher.NuxeoLauncher.configure(NuxeoLauncher.java:1984)
	at org.nuxeo.launcher.NuxeoLauncher.doStart(NuxeoLauncher.java:1651)
	at org.nuxeo.launcher.NuxeoLauncher.doStartAndWait(NuxeoLauncher.java:1605)
	at org.nuxeo.launcher.NuxeoLauncher.launch(NuxeoLauncher.java:990)
	at org.nuxeo.launcher.NuxeoLauncher.main(NuxeoLauncher.java:935)
